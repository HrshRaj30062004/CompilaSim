Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    FOR

Grammar

Rule 0     S' -> program
Rule 1     program -> function
Rule 2     function -> INT IDENTIFIER LPAREN RPAREN block
Rule 3     block -> LBRACE statements RBRACE
Rule 4     statements -> statements statement
Rule 5     statements -> statement
Rule 6     statement -> INT decl_list SEMICOLON
Rule 7     decl_list -> decl_list COMMA decl
Rule 8     decl_list -> decl
Rule 9     decl -> IDENTIFIER
Rule 10    decl -> IDENTIFIER EQUALS expression
Rule 11    statement -> IDENTIFIER EQUALS expression SEMICOLON
Rule 12    statement -> RETURN expression SEMICOLON
Rule 13    statement -> IF LPAREN expression RPAREN block
Rule 14    statement -> IF LPAREN expression RPAREN block ELSE block
Rule 15    statement -> WHILE LPAREN expression RPAREN block
Rule 16    expression -> expression LT term
Rule 17    expression -> expression GT term
Rule 18    expression -> expression LE term
Rule 19    expression -> expression GE term
Rule 20    expression -> expression EQ term
Rule 21    expression -> expression NE term
Rule 22    expression -> expression PLUS term
Rule 23    expression -> expression MINUS term
Rule 24    expression -> term
Rule 25    term -> term MULTIPLY factor
Rule 26    term -> term DIVIDE factor
Rule 27    term -> factor
Rule 28    factor -> NUMBER
Rule 29    factor -> IDENTIFIER
Rule 30    factor -> LPAREN expression RPAREN

Terminals, with rules where they appear

COMMA                : 7
DIVIDE               : 26
ELSE                 : 14
EQ                   : 20
EQUALS               : 10 11
FOR                  : 
GE                   : 19
GT                   : 17
IDENTIFIER           : 2 9 10 11 29
IF                   : 13 14
INT                  : 2 6
LBRACE               : 3
LE                   : 18
LPAREN               : 2 13 14 15 30
LT                   : 16
MINUS                : 23
MULTIPLY             : 25
NE                   : 21
NUMBER               : 28
PLUS                 : 22
RBRACE               : 3
RETURN               : 12
RPAREN               : 2 13 14 15 30
SEMICOLON            : 6 11 12
WHILE                : 15
error                : 

Nonterminals, with rules where they appear

block                : 2 13 14 14 15
decl                 : 7 8
decl_list            : 6 7
expression           : 10 11 12 13 14 15 16 17 18 19 20 21 22 23 30
factor               : 25 26 27
function             : 1
program              : 0
statement            : 4 5
statements           : 3 4
term                 : 16 17 18 19 20 21 22 23 24 25 26

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . function
    (2) function -> . INT IDENTIFIER LPAREN RPAREN block

    INT             shift and go to state 3

    program                        shift and go to state 1
    function                       shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> function .

    $end            reduce using rule 1 (program -> function .)


state 3

    (2) function -> INT . IDENTIFIER LPAREN RPAREN block

    IDENTIFIER      shift and go to state 4


state 4

    (2) function -> INT IDENTIFIER . LPAREN RPAREN block

    LPAREN          shift and go to state 5


state 5

    (2) function -> INT IDENTIFIER LPAREN . RPAREN block

    RPAREN          shift and go to state 6


state 6

    (2) function -> INT IDENTIFIER LPAREN RPAREN . block
    (3) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 8

    block                          shift and go to state 7

state 7

    (2) function -> INT IDENTIFIER LPAREN RPAREN block .

    $end            reduce using rule 2 (function -> INT IDENTIFIER LPAREN RPAREN block .)


state 8

    (3) block -> LBRACE . statements RBRACE
    (4) statements -> . statements statement
    (5) statements -> . statement
    (6) statement -> . INT decl_list SEMICOLON
    (11) statement -> . IDENTIFIER EQUALS expression SEMICOLON
    (12) statement -> . RETURN expression SEMICOLON
    (13) statement -> . IF LPAREN expression RPAREN block
    (14) statement -> . IF LPAREN expression RPAREN block ELSE block
    (15) statement -> . WHILE LPAREN expression RPAREN block

    INT             shift and go to state 11
    IDENTIFIER      shift and go to state 12
    RETURN          shift and go to state 13
    IF              shift and go to state 14
    WHILE           shift and go to state 15

    statements                     shift and go to state 9
    statement                      shift and go to state 10

state 9

    (3) block -> LBRACE statements . RBRACE
    (4) statements -> statements . statement
    (6) statement -> . INT decl_list SEMICOLON
    (11) statement -> . IDENTIFIER EQUALS expression SEMICOLON
    (12) statement -> . RETURN expression SEMICOLON
    (13) statement -> . IF LPAREN expression RPAREN block
    (14) statement -> . IF LPAREN expression RPAREN block ELSE block
    (15) statement -> . WHILE LPAREN expression RPAREN block

    RBRACE          shift and go to state 16
    INT             shift and go to state 11
    IDENTIFIER      shift and go to state 12
    RETURN          shift and go to state 13
    IF              shift and go to state 14
    WHILE           shift and go to state 15

    statement                      shift and go to state 17

state 10

    (5) statements -> statement .

    RBRACE          reduce using rule 5 (statements -> statement .)
    INT             reduce using rule 5 (statements -> statement .)
    IDENTIFIER      reduce using rule 5 (statements -> statement .)
    RETURN          reduce using rule 5 (statements -> statement .)
    IF              reduce using rule 5 (statements -> statement .)
    WHILE           reduce using rule 5 (statements -> statement .)


state 11

    (6) statement -> INT . decl_list SEMICOLON
    (7) decl_list -> . decl_list COMMA decl
    (8) decl_list -> . decl
    (9) decl -> . IDENTIFIER
    (10) decl -> . IDENTIFIER EQUALS expression

    IDENTIFIER      shift and go to state 20

    decl_list                      shift and go to state 18
    decl                           shift and go to state 19

state 12

    (11) statement -> IDENTIFIER . EQUALS expression SEMICOLON

    EQUALS          shift and go to state 21


state 13

    (12) statement -> RETURN . expression SEMICOLON
    (16) expression -> . expression LT term
    (17) expression -> . expression GT term
    (18) expression -> . expression LE term
    (19) expression -> . expression GE term
    (20) expression -> . expression EQ term
    (21) expression -> . expression NE term
    (22) expression -> . expression PLUS term
    (23) expression -> . expression MINUS term
    (24) expression -> . term
    (25) term -> . term MULTIPLY factor
    (26) term -> . term DIVIDE factor
    (27) term -> . factor
    (28) factor -> . NUMBER
    (29) factor -> . IDENTIFIER
    (30) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 25
    IDENTIFIER      shift and go to state 26
    LPAREN          shift and go to state 27

    expression                     shift and go to state 22
    term                           shift and go to state 23
    factor                         shift and go to state 24

state 14

    (13) statement -> IF . LPAREN expression RPAREN block
    (14) statement -> IF . LPAREN expression RPAREN block ELSE block

    LPAREN          shift and go to state 28


state 15

    (15) statement -> WHILE . LPAREN expression RPAREN block

    LPAREN          shift and go to state 29


state 16

    (3) block -> LBRACE statements RBRACE .

    $end            reduce using rule 3 (block -> LBRACE statements RBRACE .)
    ELSE            reduce using rule 3 (block -> LBRACE statements RBRACE .)
    RBRACE          reduce using rule 3 (block -> LBRACE statements RBRACE .)
    INT             reduce using rule 3 (block -> LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 3 (block -> LBRACE statements RBRACE .)
    RETURN          reduce using rule 3 (block -> LBRACE statements RBRACE .)
    IF              reduce using rule 3 (block -> LBRACE statements RBRACE .)
    WHILE           reduce using rule 3 (block -> LBRACE statements RBRACE .)


state 17

    (4) statements -> statements statement .

    RBRACE          reduce using rule 4 (statements -> statements statement .)
    INT             reduce using rule 4 (statements -> statements statement .)
    IDENTIFIER      reduce using rule 4 (statements -> statements statement .)
    RETURN          reduce using rule 4 (statements -> statements statement .)
    IF              reduce using rule 4 (statements -> statements statement .)
    WHILE           reduce using rule 4 (statements -> statements statement .)


state 18

    (6) statement -> INT decl_list . SEMICOLON
    (7) decl_list -> decl_list . COMMA decl

    SEMICOLON       shift and go to state 30
    COMMA           shift and go to state 31


state 19

    (8) decl_list -> decl .

    SEMICOLON       reduce using rule 8 (decl_list -> decl .)
    COMMA           reduce using rule 8 (decl_list -> decl .)


state 20

    (9) decl -> IDENTIFIER .
    (10) decl -> IDENTIFIER . EQUALS expression

    SEMICOLON       reduce using rule 9 (decl -> IDENTIFIER .)
    COMMA           reduce using rule 9 (decl -> IDENTIFIER .)
    EQUALS          shift and go to state 32


state 21

    (11) statement -> IDENTIFIER EQUALS . expression SEMICOLON
    (16) expression -> . expression LT term
    (17) expression -> . expression GT term
    (18) expression -> . expression LE term
    (19) expression -> . expression GE term
    (20) expression -> . expression EQ term
    (21) expression -> . expression NE term
    (22) expression -> . expression PLUS term
    (23) expression -> . expression MINUS term
    (24) expression -> . term
    (25) term -> . term MULTIPLY factor
    (26) term -> . term DIVIDE factor
    (27) term -> . factor
    (28) factor -> . NUMBER
    (29) factor -> . IDENTIFIER
    (30) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 25
    IDENTIFIER      shift and go to state 26
    LPAREN          shift and go to state 27

    expression                     shift and go to state 33
    term                           shift and go to state 23
    factor                         shift and go to state 24

state 22

    (12) statement -> RETURN expression . SEMICOLON
    (16) expression -> expression . LT term
    (17) expression -> expression . GT term
    (18) expression -> expression . LE term
    (19) expression -> expression . GE term
    (20) expression -> expression . EQ term
    (21) expression -> expression . NE term
    (22) expression -> expression . PLUS term
    (23) expression -> expression . MINUS term

    SEMICOLON       shift and go to state 34
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    EQ              shift and go to state 39
    NE              shift and go to state 40
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42


state 23

    (24) expression -> term .
    (25) term -> term . MULTIPLY factor
    (26) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 24 (expression -> term .)
    LT              reduce using rule 24 (expression -> term .)
    GT              reduce using rule 24 (expression -> term .)
    LE              reduce using rule 24 (expression -> term .)
    GE              reduce using rule 24 (expression -> term .)
    EQ              reduce using rule 24 (expression -> term .)
    NE              reduce using rule 24 (expression -> term .)
    PLUS            reduce using rule 24 (expression -> term .)
    MINUS           reduce using rule 24 (expression -> term .)
    RPAREN          reduce using rule 24 (expression -> term .)
    COMMA           reduce using rule 24 (expression -> term .)
    MULTIPLY        shift and go to state 43
    DIVIDE          shift and go to state 44


state 24

    (27) term -> factor .

    MULTIPLY        reduce using rule 27 (term -> factor .)
    DIVIDE          reduce using rule 27 (term -> factor .)
    SEMICOLON       reduce using rule 27 (term -> factor .)
    LT              reduce using rule 27 (term -> factor .)
    GT              reduce using rule 27 (term -> factor .)
    LE              reduce using rule 27 (term -> factor .)
    GE              reduce using rule 27 (term -> factor .)
    EQ              reduce using rule 27 (term -> factor .)
    NE              reduce using rule 27 (term -> factor .)
    PLUS            reduce using rule 27 (term -> factor .)
    MINUS           reduce using rule 27 (term -> factor .)
    RPAREN          reduce using rule 27 (term -> factor .)
    COMMA           reduce using rule 27 (term -> factor .)


state 25

    (28) factor -> NUMBER .

    MULTIPLY        reduce using rule 28 (factor -> NUMBER .)
    DIVIDE          reduce using rule 28 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 28 (factor -> NUMBER .)
    LT              reduce using rule 28 (factor -> NUMBER .)
    GT              reduce using rule 28 (factor -> NUMBER .)
    LE              reduce using rule 28 (factor -> NUMBER .)
    GE              reduce using rule 28 (factor -> NUMBER .)
    EQ              reduce using rule 28 (factor -> NUMBER .)
    NE              reduce using rule 28 (factor -> NUMBER .)
    PLUS            reduce using rule 28 (factor -> NUMBER .)
    MINUS           reduce using rule 28 (factor -> NUMBER .)
    RPAREN          reduce using rule 28 (factor -> NUMBER .)
    COMMA           reduce using rule 28 (factor -> NUMBER .)


state 26

    (29) factor -> IDENTIFIER .

    MULTIPLY        reduce using rule 29 (factor -> IDENTIFIER .)
    DIVIDE          reduce using rule 29 (factor -> IDENTIFIER .)
    SEMICOLON       reduce using rule 29 (factor -> IDENTIFIER .)
    LT              reduce using rule 29 (factor -> IDENTIFIER .)
    GT              reduce using rule 29 (factor -> IDENTIFIER .)
    LE              reduce using rule 29 (factor -> IDENTIFIER .)
    GE              reduce using rule 29 (factor -> IDENTIFIER .)
    EQ              reduce using rule 29 (factor -> IDENTIFIER .)
    NE              reduce using rule 29 (factor -> IDENTIFIER .)
    PLUS            reduce using rule 29 (factor -> IDENTIFIER .)
    MINUS           reduce using rule 29 (factor -> IDENTIFIER .)
    RPAREN          reduce using rule 29 (factor -> IDENTIFIER .)
    COMMA           reduce using rule 29 (factor -> IDENTIFIER .)


state 27

    (30) factor -> LPAREN . expression RPAREN
    (16) expression -> . expression LT term
    (17) expression -> . expression GT term
    (18) expression -> . expression LE term
    (19) expression -> . expression GE term
    (20) expression -> . expression EQ term
    (21) expression -> . expression NE term
    (22) expression -> . expression PLUS term
    (23) expression -> . expression MINUS term
    (24) expression -> . term
    (25) term -> . term MULTIPLY factor
    (26) term -> . term DIVIDE factor
    (27) term -> . factor
    (28) factor -> . NUMBER
    (29) factor -> . IDENTIFIER
    (30) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 25
    IDENTIFIER      shift and go to state 26
    LPAREN          shift and go to state 27

    expression                     shift and go to state 45
    term                           shift and go to state 23
    factor                         shift and go to state 24

state 28

    (13) statement -> IF LPAREN . expression RPAREN block
    (14) statement -> IF LPAREN . expression RPAREN block ELSE block
    (16) expression -> . expression LT term
    (17) expression -> . expression GT term
    (18) expression -> . expression LE term
    (19) expression -> . expression GE term
    (20) expression -> . expression EQ term
    (21) expression -> . expression NE term
    (22) expression -> . expression PLUS term
    (23) expression -> . expression MINUS term
    (24) expression -> . term
    (25) term -> . term MULTIPLY factor
    (26) term -> . term DIVIDE factor
    (27) term -> . factor
    (28) factor -> . NUMBER
    (29) factor -> . IDENTIFIER
    (30) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 25
    IDENTIFIER      shift and go to state 26
    LPAREN          shift and go to state 27

    expression                     shift and go to state 46
    term                           shift and go to state 23
    factor                         shift and go to state 24

state 29

    (15) statement -> WHILE LPAREN . expression RPAREN block
    (16) expression -> . expression LT term
    (17) expression -> . expression GT term
    (18) expression -> . expression LE term
    (19) expression -> . expression GE term
    (20) expression -> . expression EQ term
    (21) expression -> . expression NE term
    (22) expression -> . expression PLUS term
    (23) expression -> . expression MINUS term
    (24) expression -> . term
    (25) term -> . term MULTIPLY factor
    (26) term -> . term DIVIDE factor
    (27) term -> . factor
    (28) factor -> . NUMBER
    (29) factor -> . IDENTIFIER
    (30) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 25
    IDENTIFIER      shift and go to state 26
    LPAREN          shift and go to state 27

    expression                     shift and go to state 47
    term                           shift and go to state 23
    factor                         shift and go to state 24

state 30

    (6) statement -> INT decl_list SEMICOLON .

    RBRACE          reduce using rule 6 (statement -> INT decl_list SEMICOLON .)
    INT             reduce using rule 6 (statement -> INT decl_list SEMICOLON .)
    IDENTIFIER      reduce using rule 6 (statement -> INT decl_list SEMICOLON .)
    RETURN          reduce using rule 6 (statement -> INT decl_list SEMICOLON .)
    IF              reduce using rule 6 (statement -> INT decl_list SEMICOLON .)
    WHILE           reduce using rule 6 (statement -> INT decl_list SEMICOLON .)


state 31

    (7) decl_list -> decl_list COMMA . decl
    (9) decl -> . IDENTIFIER
    (10) decl -> . IDENTIFIER EQUALS expression

    IDENTIFIER      shift and go to state 20

    decl                           shift and go to state 48

state 32

    (10) decl -> IDENTIFIER EQUALS . expression
    (16) expression -> . expression LT term
    (17) expression -> . expression GT term
    (18) expression -> . expression LE term
    (19) expression -> . expression GE term
    (20) expression -> . expression EQ term
    (21) expression -> . expression NE term
    (22) expression -> . expression PLUS term
    (23) expression -> . expression MINUS term
    (24) expression -> . term
    (25) term -> . term MULTIPLY factor
    (26) term -> . term DIVIDE factor
    (27) term -> . factor
    (28) factor -> . NUMBER
    (29) factor -> . IDENTIFIER
    (30) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 25
    IDENTIFIER      shift and go to state 26
    LPAREN          shift and go to state 27

    expression                     shift and go to state 49
    term                           shift and go to state 23
    factor                         shift and go to state 24

state 33

    (11) statement -> IDENTIFIER EQUALS expression . SEMICOLON
    (16) expression -> expression . LT term
    (17) expression -> expression . GT term
    (18) expression -> expression . LE term
    (19) expression -> expression . GE term
    (20) expression -> expression . EQ term
    (21) expression -> expression . NE term
    (22) expression -> expression . PLUS term
    (23) expression -> expression . MINUS term

    SEMICOLON       shift and go to state 50
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    EQ              shift and go to state 39
    NE              shift and go to state 40
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42


state 34

    (12) statement -> RETURN expression SEMICOLON .

    RBRACE          reduce using rule 12 (statement -> RETURN expression SEMICOLON .)
    INT             reduce using rule 12 (statement -> RETURN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 12 (statement -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 12 (statement -> RETURN expression SEMICOLON .)
    IF              reduce using rule 12 (statement -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 12 (statement -> RETURN expression SEMICOLON .)


state 35

    (16) expression -> expression LT . term
    (25) term -> . term MULTIPLY factor
    (26) term -> . term DIVIDE factor
    (27) term -> . factor
    (28) factor -> . NUMBER
    (29) factor -> . IDENTIFIER
    (30) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 25
    IDENTIFIER      shift and go to state 26
    LPAREN          shift and go to state 27

    term                           shift and go to state 51
    factor                         shift and go to state 24

state 36

    (17) expression -> expression GT . term
    (25) term -> . term MULTIPLY factor
    (26) term -> . term DIVIDE factor
    (27) term -> . factor
    (28) factor -> . NUMBER
    (29) factor -> . IDENTIFIER
    (30) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 25
    IDENTIFIER      shift and go to state 26
    LPAREN          shift and go to state 27

    term                           shift and go to state 52
    factor                         shift and go to state 24

state 37

    (18) expression -> expression LE . term
    (25) term -> . term MULTIPLY factor
    (26) term -> . term DIVIDE factor
    (27) term -> . factor
    (28) factor -> . NUMBER
    (29) factor -> . IDENTIFIER
    (30) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 25
    IDENTIFIER      shift and go to state 26
    LPAREN          shift and go to state 27

    term                           shift and go to state 53
    factor                         shift and go to state 24

state 38

    (19) expression -> expression GE . term
    (25) term -> . term MULTIPLY factor
    (26) term -> . term DIVIDE factor
    (27) term -> . factor
    (28) factor -> . NUMBER
    (29) factor -> . IDENTIFIER
    (30) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 25
    IDENTIFIER      shift and go to state 26
    LPAREN          shift and go to state 27

    term                           shift and go to state 54
    factor                         shift and go to state 24

state 39

    (20) expression -> expression EQ . term
    (25) term -> . term MULTIPLY factor
    (26) term -> . term DIVIDE factor
    (27) term -> . factor
    (28) factor -> . NUMBER
    (29) factor -> . IDENTIFIER
    (30) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 25
    IDENTIFIER      shift and go to state 26
    LPAREN          shift and go to state 27

    term                           shift and go to state 55
    factor                         shift and go to state 24

state 40

    (21) expression -> expression NE . term
    (25) term -> . term MULTIPLY factor
    (26) term -> . term DIVIDE factor
    (27) term -> . factor
    (28) factor -> . NUMBER
    (29) factor -> . IDENTIFIER
    (30) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 25
    IDENTIFIER      shift and go to state 26
    LPAREN          shift and go to state 27

    term                           shift and go to state 56
    factor                         shift and go to state 24

state 41

    (22) expression -> expression PLUS . term
    (25) term -> . term MULTIPLY factor
    (26) term -> . term DIVIDE factor
    (27) term -> . factor
    (28) factor -> . NUMBER
    (29) factor -> . IDENTIFIER
    (30) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 25
    IDENTIFIER      shift and go to state 26
    LPAREN          shift and go to state 27

    term                           shift and go to state 57
    factor                         shift and go to state 24

state 42

    (23) expression -> expression MINUS . term
    (25) term -> . term MULTIPLY factor
    (26) term -> . term DIVIDE factor
    (27) term -> . factor
    (28) factor -> . NUMBER
    (29) factor -> . IDENTIFIER
    (30) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 25
    IDENTIFIER      shift and go to state 26
    LPAREN          shift and go to state 27

    term                           shift and go to state 58
    factor                         shift and go to state 24

state 43

    (25) term -> term MULTIPLY . factor
    (28) factor -> . NUMBER
    (29) factor -> . IDENTIFIER
    (30) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 25
    IDENTIFIER      shift and go to state 26
    LPAREN          shift and go to state 27

    factor                         shift and go to state 59

state 44

    (26) term -> term DIVIDE . factor
    (28) factor -> . NUMBER
    (29) factor -> . IDENTIFIER
    (30) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 25
    IDENTIFIER      shift and go to state 26
    LPAREN          shift and go to state 27

    factor                         shift and go to state 60

state 45

    (30) factor -> LPAREN expression . RPAREN
    (16) expression -> expression . LT term
    (17) expression -> expression . GT term
    (18) expression -> expression . LE term
    (19) expression -> expression . GE term
    (20) expression -> expression . EQ term
    (21) expression -> expression . NE term
    (22) expression -> expression . PLUS term
    (23) expression -> expression . MINUS term

    RPAREN          shift and go to state 61
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    EQ              shift and go to state 39
    NE              shift and go to state 40
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42


state 46

    (13) statement -> IF LPAREN expression . RPAREN block
    (14) statement -> IF LPAREN expression . RPAREN block ELSE block
    (16) expression -> expression . LT term
    (17) expression -> expression . GT term
    (18) expression -> expression . LE term
    (19) expression -> expression . GE term
    (20) expression -> expression . EQ term
    (21) expression -> expression . NE term
    (22) expression -> expression . PLUS term
    (23) expression -> expression . MINUS term

    RPAREN          shift and go to state 62
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    EQ              shift and go to state 39
    NE              shift and go to state 40
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42


state 47

    (15) statement -> WHILE LPAREN expression . RPAREN block
    (16) expression -> expression . LT term
    (17) expression -> expression . GT term
    (18) expression -> expression . LE term
    (19) expression -> expression . GE term
    (20) expression -> expression . EQ term
    (21) expression -> expression . NE term
    (22) expression -> expression . PLUS term
    (23) expression -> expression . MINUS term

    RPAREN          shift and go to state 63
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    EQ              shift and go to state 39
    NE              shift and go to state 40
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42


state 48

    (7) decl_list -> decl_list COMMA decl .

    SEMICOLON       reduce using rule 7 (decl_list -> decl_list COMMA decl .)
    COMMA           reduce using rule 7 (decl_list -> decl_list COMMA decl .)


state 49

    (10) decl -> IDENTIFIER EQUALS expression .
    (16) expression -> expression . LT term
    (17) expression -> expression . GT term
    (18) expression -> expression . LE term
    (19) expression -> expression . GE term
    (20) expression -> expression . EQ term
    (21) expression -> expression . NE term
    (22) expression -> expression . PLUS term
    (23) expression -> expression . MINUS term

    SEMICOLON       reduce using rule 10 (decl -> IDENTIFIER EQUALS expression .)
    COMMA           reduce using rule 10 (decl -> IDENTIFIER EQUALS expression .)
    LT              shift and go to state 35
    GT              shift and go to state 36
    LE              shift and go to state 37
    GE              shift and go to state 38
    EQ              shift and go to state 39
    NE              shift and go to state 40
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42


state 50

    (11) statement -> IDENTIFIER EQUALS expression SEMICOLON .

    RBRACE          reduce using rule 11 (statement -> IDENTIFIER EQUALS expression SEMICOLON .)
    INT             reduce using rule 11 (statement -> IDENTIFIER EQUALS expression SEMICOLON .)
    IDENTIFIER      reduce using rule 11 (statement -> IDENTIFIER EQUALS expression SEMICOLON .)
    RETURN          reduce using rule 11 (statement -> IDENTIFIER EQUALS expression SEMICOLON .)
    IF              reduce using rule 11 (statement -> IDENTIFIER EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 11 (statement -> IDENTIFIER EQUALS expression SEMICOLON .)


state 51

    (16) expression -> expression LT term .
    (25) term -> term . MULTIPLY factor
    (26) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 16 (expression -> expression LT term .)
    LT              reduce using rule 16 (expression -> expression LT term .)
    GT              reduce using rule 16 (expression -> expression LT term .)
    LE              reduce using rule 16 (expression -> expression LT term .)
    GE              reduce using rule 16 (expression -> expression LT term .)
    EQ              reduce using rule 16 (expression -> expression LT term .)
    NE              reduce using rule 16 (expression -> expression LT term .)
    PLUS            reduce using rule 16 (expression -> expression LT term .)
    MINUS           reduce using rule 16 (expression -> expression LT term .)
    RPAREN          reduce using rule 16 (expression -> expression LT term .)
    COMMA           reduce using rule 16 (expression -> expression LT term .)
    MULTIPLY        shift and go to state 43
    DIVIDE          shift and go to state 44


state 52

    (17) expression -> expression GT term .
    (25) term -> term . MULTIPLY factor
    (26) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 17 (expression -> expression GT term .)
    LT              reduce using rule 17 (expression -> expression GT term .)
    GT              reduce using rule 17 (expression -> expression GT term .)
    LE              reduce using rule 17 (expression -> expression GT term .)
    GE              reduce using rule 17 (expression -> expression GT term .)
    EQ              reduce using rule 17 (expression -> expression GT term .)
    NE              reduce using rule 17 (expression -> expression GT term .)
    PLUS            reduce using rule 17 (expression -> expression GT term .)
    MINUS           reduce using rule 17 (expression -> expression GT term .)
    RPAREN          reduce using rule 17 (expression -> expression GT term .)
    COMMA           reduce using rule 17 (expression -> expression GT term .)
    MULTIPLY        shift and go to state 43
    DIVIDE          shift and go to state 44


state 53

    (18) expression -> expression LE term .
    (25) term -> term . MULTIPLY factor
    (26) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 18 (expression -> expression LE term .)
    LT              reduce using rule 18 (expression -> expression LE term .)
    GT              reduce using rule 18 (expression -> expression LE term .)
    LE              reduce using rule 18 (expression -> expression LE term .)
    GE              reduce using rule 18 (expression -> expression LE term .)
    EQ              reduce using rule 18 (expression -> expression LE term .)
    NE              reduce using rule 18 (expression -> expression LE term .)
    PLUS            reduce using rule 18 (expression -> expression LE term .)
    MINUS           reduce using rule 18 (expression -> expression LE term .)
    RPAREN          reduce using rule 18 (expression -> expression LE term .)
    COMMA           reduce using rule 18 (expression -> expression LE term .)
    MULTIPLY        shift and go to state 43
    DIVIDE          shift and go to state 44


state 54

    (19) expression -> expression GE term .
    (25) term -> term . MULTIPLY factor
    (26) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 19 (expression -> expression GE term .)
    LT              reduce using rule 19 (expression -> expression GE term .)
    GT              reduce using rule 19 (expression -> expression GE term .)
    LE              reduce using rule 19 (expression -> expression GE term .)
    GE              reduce using rule 19 (expression -> expression GE term .)
    EQ              reduce using rule 19 (expression -> expression GE term .)
    NE              reduce using rule 19 (expression -> expression GE term .)
    PLUS            reduce using rule 19 (expression -> expression GE term .)
    MINUS           reduce using rule 19 (expression -> expression GE term .)
    RPAREN          reduce using rule 19 (expression -> expression GE term .)
    COMMA           reduce using rule 19 (expression -> expression GE term .)
    MULTIPLY        shift and go to state 43
    DIVIDE          shift and go to state 44


state 55

    (20) expression -> expression EQ term .
    (25) term -> term . MULTIPLY factor
    (26) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 20 (expression -> expression EQ term .)
    LT              reduce using rule 20 (expression -> expression EQ term .)
    GT              reduce using rule 20 (expression -> expression EQ term .)
    LE              reduce using rule 20 (expression -> expression EQ term .)
    GE              reduce using rule 20 (expression -> expression EQ term .)
    EQ              reduce using rule 20 (expression -> expression EQ term .)
    NE              reduce using rule 20 (expression -> expression EQ term .)
    PLUS            reduce using rule 20 (expression -> expression EQ term .)
    MINUS           reduce using rule 20 (expression -> expression EQ term .)
    RPAREN          reduce using rule 20 (expression -> expression EQ term .)
    COMMA           reduce using rule 20 (expression -> expression EQ term .)
    MULTIPLY        shift and go to state 43
    DIVIDE          shift and go to state 44


state 56

    (21) expression -> expression NE term .
    (25) term -> term . MULTIPLY factor
    (26) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 21 (expression -> expression NE term .)
    LT              reduce using rule 21 (expression -> expression NE term .)
    GT              reduce using rule 21 (expression -> expression NE term .)
    LE              reduce using rule 21 (expression -> expression NE term .)
    GE              reduce using rule 21 (expression -> expression NE term .)
    EQ              reduce using rule 21 (expression -> expression NE term .)
    NE              reduce using rule 21 (expression -> expression NE term .)
    PLUS            reduce using rule 21 (expression -> expression NE term .)
    MINUS           reduce using rule 21 (expression -> expression NE term .)
    RPAREN          reduce using rule 21 (expression -> expression NE term .)
    COMMA           reduce using rule 21 (expression -> expression NE term .)
    MULTIPLY        shift and go to state 43
    DIVIDE          shift and go to state 44


state 57

    (22) expression -> expression PLUS term .
    (25) term -> term . MULTIPLY factor
    (26) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 22 (expression -> expression PLUS term .)
    LT              reduce using rule 22 (expression -> expression PLUS term .)
    GT              reduce using rule 22 (expression -> expression PLUS term .)
    LE              reduce using rule 22 (expression -> expression PLUS term .)
    GE              reduce using rule 22 (expression -> expression PLUS term .)
    EQ              reduce using rule 22 (expression -> expression PLUS term .)
    NE              reduce using rule 22 (expression -> expression PLUS term .)
    PLUS            reduce using rule 22 (expression -> expression PLUS term .)
    MINUS           reduce using rule 22 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 22 (expression -> expression PLUS term .)
    COMMA           reduce using rule 22 (expression -> expression PLUS term .)
    MULTIPLY        shift and go to state 43
    DIVIDE          shift and go to state 44


state 58

    (23) expression -> expression MINUS term .
    (25) term -> term . MULTIPLY factor
    (26) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 23 (expression -> expression MINUS term .)
    LT              reduce using rule 23 (expression -> expression MINUS term .)
    GT              reduce using rule 23 (expression -> expression MINUS term .)
    LE              reduce using rule 23 (expression -> expression MINUS term .)
    GE              reduce using rule 23 (expression -> expression MINUS term .)
    EQ              reduce using rule 23 (expression -> expression MINUS term .)
    NE              reduce using rule 23 (expression -> expression MINUS term .)
    PLUS            reduce using rule 23 (expression -> expression MINUS term .)
    MINUS           reduce using rule 23 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 23 (expression -> expression MINUS term .)
    COMMA           reduce using rule 23 (expression -> expression MINUS term .)
    MULTIPLY        shift and go to state 43
    DIVIDE          shift and go to state 44


state 59

    (25) term -> term MULTIPLY factor .

    MULTIPLY        reduce using rule 25 (term -> term MULTIPLY factor .)
    DIVIDE          reduce using rule 25 (term -> term MULTIPLY factor .)
    SEMICOLON       reduce using rule 25 (term -> term MULTIPLY factor .)
    LT              reduce using rule 25 (term -> term MULTIPLY factor .)
    GT              reduce using rule 25 (term -> term MULTIPLY factor .)
    LE              reduce using rule 25 (term -> term MULTIPLY factor .)
    GE              reduce using rule 25 (term -> term MULTIPLY factor .)
    EQ              reduce using rule 25 (term -> term MULTIPLY factor .)
    NE              reduce using rule 25 (term -> term MULTIPLY factor .)
    PLUS            reduce using rule 25 (term -> term MULTIPLY factor .)
    MINUS           reduce using rule 25 (term -> term MULTIPLY factor .)
    RPAREN          reduce using rule 25 (term -> term MULTIPLY factor .)
    COMMA           reduce using rule 25 (term -> term MULTIPLY factor .)


state 60

    (26) term -> term DIVIDE factor .

    MULTIPLY        reduce using rule 26 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 26 (term -> term DIVIDE factor .)
    SEMICOLON       reduce using rule 26 (term -> term DIVIDE factor .)
    LT              reduce using rule 26 (term -> term DIVIDE factor .)
    GT              reduce using rule 26 (term -> term DIVIDE factor .)
    LE              reduce using rule 26 (term -> term DIVIDE factor .)
    GE              reduce using rule 26 (term -> term DIVIDE factor .)
    EQ              reduce using rule 26 (term -> term DIVIDE factor .)
    NE              reduce using rule 26 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 26 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 26 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 26 (term -> term DIVIDE factor .)
    COMMA           reduce using rule 26 (term -> term DIVIDE factor .)


state 61

    (30) factor -> LPAREN expression RPAREN .

    MULTIPLY        reduce using rule 30 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 30 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 30 (factor -> LPAREN expression RPAREN .)
    LT              reduce using rule 30 (factor -> LPAREN expression RPAREN .)
    GT              reduce using rule 30 (factor -> LPAREN expression RPAREN .)
    LE              reduce using rule 30 (factor -> LPAREN expression RPAREN .)
    GE              reduce using rule 30 (factor -> LPAREN expression RPAREN .)
    EQ              reduce using rule 30 (factor -> LPAREN expression RPAREN .)
    NE              reduce using rule 30 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 30 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 30 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 30 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 30 (factor -> LPAREN expression RPAREN .)


state 62

    (13) statement -> IF LPAREN expression RPAREN . block
    (14) statement -> IF LPAREN expression RPAREN . block ELSE block
    (3) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 8

    block                          shift and go to state 64

state 63

    (15) statement -> WHILE LPAREN expression RPAREN . block
    (3) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 8

    block                          shift and go to state 65

state 64

    (13) statement -> IF LPAREN expression RPAREN block .
    (14) statement -> IF LPAREN expression RPAREN block . ELSE block

    RBRACE          reduce using rule 13 (statement -> IF LPAREN expression RPAREN block .)
    INT             reduce using rule 13 (statement -> IF LPAREN expression RPAREN block .)
    IDENTIFIER      reduce using rule 13 (statement -> IF LPAREN expression RPAREN block .)
    RETURN          reduce using rule 13 (statement -> IF LPAREN expression RPAREN block .)
    IF              reduce using rule 13 (statement -> IF LPAREN expression RPAREN block .)
    WHILE           reduce using rule 13 (statement -> IF LPAREN expression RPAREN block .)
    ELSE            shift and go to state 66


state 65

    (15) statement -> WHILE LPAREN expression RPAREN block .

    RBRACE          reduce using rule 15 (statement -> WHILE LPAREN expression RPAREN block .)
    INT             reduce using rule 15 (statement -> WHILE LPAREN expression RPAREN block .)
    IDENTIFIER      reduce using rule 15 (statement -> WHILE LPAREN expression RPAREN block .)
    RETURN          reduce using rule 15 (statement -> WHILE LPAREN expression RPAREN block .)
    IF              reduce using rule 15 (statement -> WHILE LPAREN expression RPAREN block .)
    WHILE           reduce using rule 15 (statement -> WHILE LPAREN expression RPAREN block .)


state 66

    (14) statement -> IF LPAREN expression RPAREN block ELSE . block
    (3) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 8

    block                          shift and go to state 67

state 67

    (14) statement -> IF LPAREN expression RPAREN block ELSE block .

    RBRACE          reduce using rule 14 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    INT             reduce using rule 14 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    IDENTIFIER      reduce using rule 14 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    RETURN          reduce using rule 14 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    IF              reduce using rule 14 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    WHILE           reduce using rule 14 (statement -> IF LPAREN expression RPAREN block ELSE block .)

