Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CHAR
    FLOAT
    FOR

Grammar

Rule 0     S' -> program
Rule 1     program -> function
Rule 2     function -> INT IDENTIFIER LPAREN RPAREN block
Rule 3     block -> LBRACE statements RBRACE
Rule 4     statements -> statements statement
Rule 5     statements -> statement
Rule 6     statement -> INT decl_list SEMICOLON
Rule 7     decl_list -> decl_list COMMA decl
Rule 8     decl_list -> decl
Rule 9     decl -> IDENTIFIER
Rule 10    decl -> IDENTIFIER EQUALS expression
Rule 11    statement -> IDENTIFIER EQUALS expression SEMICOLON
Rule 12    statement -> RETURN expression SEMICOLON
Rule 13    statement -> IF LPAREN expression RPAREN block
Rule 14    statement -> IF LPAREN expression RPAREN block ELSE block
Rule 15    statement -> WHILE LPAREN expression RPAREN block
Rule 16    statement -> PRINTF LPAREN string_and_args RPAREN SEMICOLON
Rule 17    statement -> SCANF LPAREN string_and_args RPAREN SEMICOLON
Rule 18    string_and_args -> STRING
Rule 19    string_and_args -> STRING COMMA arg_list
Rule 20    arg_list -> arg_list COMMA expression
Rule 21    arg_list -> expression
Rule 22    expression -> expression LT term
Rule 23    expression -> expression GT term
Rule 24    expression -> expression LE term
Rule 25    expression -> expression GE term
Rule 26    expression -> expression EQ term
Rule 27    expression -> expression NE term
Rule 28    expression -> expression PLUS term
Rule 29    expression -> expression MINUS term
Rule 30    expression -> term
Rule 31    term -> term MULTIPLY factor
Rule 32    term -> term DIVIDE factor
Rule 33    term -> factor
Rule 34    factor -> NUMBER
Rule 35    factor -> IDENTIFIER
Rule 36    factor -> LPAREN expression RPAREN
Rule 37    factor -> STRING

Terminals, with rules where they appear

CHAR                 : 
COMMA                : 7 19 20
DIVIDE               : 32
ELSE                 : 14
EQ                   : 26
EQUALS               : 10 11
FLOAT                : 
FOR                  : 
GE                   : 25
GT                   : 23
IDENTIFIER           : 2 9 10 11 35
IF                   : 13 14
INT                  : 2 6
LBRACE               : 3
LE                   : 24
LPAREN               : 2 13 14 15 16 17 36
LT                   : 22
MINUS                : 29
MULTIPLY             : 31
NE                   : 27
NUMBER               : 34
PLUS                 : 28
PRINTF               : 16
RBRACE               : 3
RETURN               : 12
RPAREN               : 2 13 14 15 16 17 36
SCANF                : 17
SEMICOLON            : 6 11 12 16 17
STRING               : 18 19 37
WHILE                : 15
error                : 

Nonterminals, with rules where they appear

arg_list             : 19 20
block                : 2 13 14 14 15
decl                 : 7 8
decl_list            : 6 7
expression           : 10 11 12 13 14 15 20 21 22 23 24 25 26 27 28 29 36
factor               : 31 32 33
function             : 1
program              : 0
statement            : 4 5
statements           : 3 4
string_and_args      : 16 17
term                 : 22 23 24 25 26 27 28 29 30 31 32

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . function
    (2) function -> . INT IDENTIFIER LPAREN RPAREN block

    INT             shift and go to state 3

    program                        shift and go to state 1
    function                       shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> function .

    $end            reduce using rule 1 (program -> function .)


state 3

    (2) function -> INT . IDENTIFIER LPAREN RPAREN block

    IDENTIFIER      shift and go to state 4


state 4

    (2) function -> INT IDENTIFIER . LPAREN RPAREN block

    LPAREN          shift and go to state 5


state 5

    (2) function -> INT IDENTIFIER LPAREN . RPAREN block

    RPAREN          shift and go to state 6


state 6

    (2) function -> INT IDENTIFIER LPAREN RPAREN . block
    (3) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 8

    block                          shift and go to state 7

state 7

    (2) function -> INT IDENTIFIER LPAREN RPAREN block .

    $end            reduce using rule 2 (function -> INT IDENTIFIER LPAREN RPAREN block .)


state 8

    (3) block -> LBRACE . statements RBRACE
    (4) statements -> . statements statement
    (5) statements -> . statement
    (6) statement -> . INT decl_list SEMICOLON
    (11) statement -> . IDENTIFIER EQUALS expression SEMICOLON
    (12) statement -> . RETURN expression SEMICOLON
    (13) statement -> . IF LPAREN expression RPAREN block
    (14) statement -> . IF LPAREN expression RPAREN block ELSE block
    (15) statement -> . WHILE LPAREN expression RPAREN block
    (16) statement -> . PRINTF LPAREN string_and_args RPAREN SEMICOLON
    (17) statement -> . SCANF LPAREN string_and_args RPAREN SEMICOLON

    INT             shift and go to state 11
    IDENTIFIER      shift and go to state 12
    RETURN          shift and go to state 13
    IF              shift and go to state 14
    WHILE           shift and go to state 15
    PRINTF          shift and go to state 16
    SCANF           shift and go to state 17

    statements                     shift and go to state 9
    statement                      shift and go to state 10

state 9

    (3) block -> LBRACE statements . RBRACE
    (4) statements -> statements . statement
    (6) statement -> . INT decl_list SEMICOLON
    (11) statement -> . IDENTIFIER EQUALS expression SEMICOLON
    (12) statement -> . RETURN expression SEMICOLON
    (13) statement -> . IF LPAREN expression RPAREN block
    (14) statement -> . IF LPAREN expression RPAREN block ELSE block
    (15) statement -> . WHILE LPAREN expression RPAREN block
    (16) statement -> . PRINTF LPAREN string_and_args RPAREN SEMICOLON
    (17) statement -> . SCANF LPAREN string_and_args RPAREN SEMICOLON

    RBRACE          shift and go to state 18
    INT             shift and go to state 11
    IDENTIFIER      shift and go to state 12
    RETURN          shift and go to state 13
    IF              shift and go to state 14
    WHILE           shift and go to state 15
    PRINTF          shift and go to state 16
    SCANF           shift and go to state 17

    statement                      shift and go to state 19

state 10

    (5) statements -> statement .

    RBRACE          reduce using rule 5 (statements -> statement .)
    INT             reduce using rule 5 (statements -> statement .)
    IDENTIFIER      reduce using rule 5 (statements -> statement .)
    RETURN          reduce using rule 5 (statements -> statement .)
    IF              reduce using rule 5 (statements -> statement .)
    WHILE           reduce using rule 5 (statements -> statement .)
    PRINTF          reduce using rule 5 (statements -> statement .)
    SCANF           reduce using rule 5 (statements -> statement .)


state 11

    (6) statement -> INT . decl_list SEMICOLON
    (7) decl_list -> . decl_list COMMA decl
    (8) decl_list -> . decl
    (9) decl -> . IDENTIFIER
    (10) decl -> . IDENTIFIER EQUALS expression

    IDENTIFIER      shift and go to state 22

    decl_list                      shift and go to state 20
    decl                           shift and go to state 21

state 12

    (11) statement -> IDENTIFIER . EQUALS expression SEMICOLON

    EQUALS          shift and go to state 23


state 13

    (12) statement -> RETURN . expression SEMICOLON
    (22) expression -> . expression LT term
    (23) expression -> . expression GT term
    (24) expression -> . expression LE term
    (25) expression -> . expression GE term
    (26) expression -> . expression EQ term
    (27) expression -> . expression NE term
    (28) expression -> . expression PLUS term
    (29) expression -> . expression MINUS term
    (30) expression -> . term
    (31) term -> . term MULTIPLY factor
    (32) term -> . term DIVIDE factor
    (33) term -> . factor
    (34) factor -> . NUMBER
    (35) factor -> . IDENTIFIER
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . STRING

    NUMBER          shift and go to state 27
    IDENTIFIER      shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30

    expression                     shift and go to state 24
    term                           shift and go to state 25
    factor                         shift and go to state 26

state 14

    (13) statement -> IF . LPAREN expression RPAREN block
    (14) statement -> IF . LPAREN expression RPAREN block ELSE block

    LPAREN          shift and go to state 31


state 15

    (15) statement -> WHILE . LPAREN expression RPAREN block

    LPAREN          shift and go to state 32


state 16

    (16) statement -> PRINTF . LPAREN string_and_args RPAREN SEMICOLON

    LPAREN          shift and go to state 33


state 17

    (17) statement -> SCANF . LPAREN string_and_args RPAREN SEMICOLON

    LPAREN          shift and go to state 34


state 18

    (3) block -> LBRACE statements RBRACE .

    $end            reduce using rule 3 (block -> LBRACE statements RBRACE .)
    ELSE            reduce using rule 3 (block -> LBRACE statements RBRACE .)
    RBRACE          reduce using rule 3 (block -> LBRACE statements RBRACE .)
    INT             reduce using rule 3 (block -> LBRACE statements RBRACE .)
    IDENTIFIER      reduce using rule 3 (block -> LBRACE statements RBRACE .)
    RETURN          reduce using rule 3 (block -> LBRACE statements RBRACE .)
    IF              reduce using rule 3 (block -> LBRACE statements RBRACE .)
    WHILE           reduce using rule 3 (block -> LBRACE statements RBRACE .)
    PRINTF          reduce using rule 3 (block -> LBRACE statements RBRACE .)
    SCANF           reduce using rule 3 (block -> LBRACE statements RBRACE .)


state 19

    (4) statements -> statements statement .

    RBRACE          reduce using rule 4 (statements -> statements statement .)
    INT             reduce using rule 4 (statements -> statements statement .)
    IDENTIFIER      reduce using rule 4 (statements -> statements statement .)
    RETURN          reduce using rule 4 (statements -> statements statement .)
    IF              reduce using rule 4 (statements -> statements statement .)
    WHILE           reduce using rule 4 (statements -> statements statement .)
    PRINTF          reduce using rule 4 (statements -> statements statement .)
    SCANF           reduce using rule 4 (statements -> statements statement .)


state 20

    (6) statement -> INT decl_list . SEMICOLON
    (7) decl_list -> decl_list . COMMA decl

    SEMICOLON       shift and go to state 35
    COMMA           shift and go to state 36


state 21

    (8) decl_list -> decl .

    SEMICOLON       reduce using rule 8 (decl_list -> decl .)
    COMMA           reduce using rule 8 (decl_list -> decl .)


state 22

    (9) decl -> IDENTIFIER .
    (10) decl -> IDENTIFIER . EQUALS expression

    SEMICOLON       reduce using rule 9 (decl -> IDENTIFIER .)
    COMMA           reduce using rule 9 (decl -> IDENTIFIER .)
    EQUALS          shift and go to state 37


state 23

    (11) statement -> IDENTIFIER EQUALS . expression SEMICOLON
    (22) expression -> . expression LT term
    (23) expression -> . expression GT term
    (24) expression -> . expression LE term
    (25) expression -> . expression GE term
    (26) expression -> . expression EQ term
    (27) expression -> . expression NE term
    (28) expression -> . expression PLUS term
    (29) expression -> . expression MINUS term
    (30) expression -> . term
    (31) term -> . term MULTIPLY factor
    (32) term -> . term DIVIDE factor
    (33) term -> . factor
    (34) factor -> . NUMBER
    (35) factor -> . IDENTIFIER
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . STRING

    NUMBER          shift and go to state 27
    IDENTIFIER      shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30

    expression                     shift and go to state 38
    term                           shift and go to state 25
    factor                         shift and go to state 26

state 24

    (12) statement -> RETURN expression . SEMICOLON
    (22) expression -> expression . LT term
    (23) expression -> expression . GT term
    (24) expression -> expression . LE term
    (25) expression -> expression . GE term
    (26) expression -> expression . EQ term
    (27) expression -> expression . NE term
    (28) expression -> expression . PLUS term
    (29) expression -> expression . MINUS term

    SEMICOLON       shift and go to state 39
    LT              shift and go to state 40
    GT              shift and go to state 41
    LE              shift and go to state 42
    GE              shift and go to state 43
    EQ              shift and go to state 44
    NE              shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47


state 25

    (30) expression -> term .
    (31) term -> term . MULTIPLY factor
    (32) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 30 (expression -> term .)
    LT              reduce using rule 30 (expression -> term .)
    GT              reduce using rule 30 (expression -> term .)
    LE              reduce using rule 30 (expression -> term .)
    GE              reduce using rule 30 (expression -> term .)
    EQ              reduce using rule 30 (expression -> term .)
    NE              reduce using rule 30 (expression -> term .)
    PLUS            reduce using rule 30 (expression -> term .)
    MINUS           reduce using rule 30 (expression -> term .)
    RPAREN          reduce using rule 30 (expression -> term .)
    COMMA           reduce using rule 30 (expression -> term .)
    MULTIPLY        shift and go to state 48
    DIVIDE          shift and go to state 49


state 26

    (33) term -> factor .

    MULTIPLY        reduce using rule 33 (term -> factor .)
    DIVIDE          reduce using rule 33 (term -> factor .)
    SEMICOLON       reduce using rule 33 (term -> factor .)
    LT              reduce using rule 33 (term -> factor .)
    GT              reduce using rule 33 (term -> factor .)
    LE              reduce using rule 33 (term -> factor .)
    GE              reduce using rule 33 (term -> factor .)
    EQ              reduce using rule 33 (term -> factor .)
    NE              reduce using rule 33 (term -> factor .)
    PLUS            reduce using rule 33 (term -> factor .)
    MINUS           reduce using rule 33 (term -> factor .)
    RPAREN          reduce using rule 33 (term -> factor .)
    COMMA           reduce using rule 33 (term -> factor .)


state 27

    (34) factor -> NUMBER .

    MULTIPLY        reduce using rule 34 (factor -> NUMBER .)
    DIVIDE          reduce using rule 34 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 34 (factor -> NUMBER .)
    LT              reduce using rule 34 (factor -> NUMBER .)
    GT              reduce using rule 34 (factor -> NUMBER .)
    LE              reduce using rule 34 (factor -> NUMBER .)
    GE              reduce using rule 34 (factor -> NUMBER .)
    EQ              reduce using rule 34 (factor -> NUMBER .)
    NE              reduce using rule 34 (factor -> NUMBER .)
    PLUS            reduce using rule 34 (factor -> NUMBER .)
    MINUS           reduce using rule 34 (factor -> NUMBER .)
    RPAREN          reduce using rule 34 (factor -> NUMBER .)
    COMMA           reduce using rule 34 (factor -> NUMBER .)


state 28

    (35) factor -> IDENTIFIER .

    MULTIPLY        reduce using rule 35 (factor -> IDENTIFIER .)
    DIVIDE          reduce using rule 35 (factor -> IDENTIFIER .)
    SEMICOLON       reduce using rule 35 (factor -> IDENTIFIER .)
    LT              reduce using rule 35 (factor -> IDENTIFIER .)
    GT              reduce using rule 35 (factor -> IDENTIFIER .)
    LE              reduce using rule 35 (factor -> IDENTIFIER .)
    GE              reduce using rule 35 (factor -> IDENTIFIER .)
    EQ              reduce using rule 35 (factor -> IDENTIFIER .)
    NE              reduce using rule 35 (factor -> IDENTIFIER .)
    PLUS            reduce using rule 35 (factor -> IDENTIFIER .)
    MINUS           reduce using rule 35 (factor -> IDENTIFIER .)
    RPAREN          reduce using rule 35 (factor -> IDENTIFIER .)
    COMMA           reduce using rule 35 (factor -> IDENTIFIER .)


state 29

    (36) factor -> LPAREN . expression RPAREN
    (22) expression -> . expression LT term
    (23) expression -> . expression GT term
    (24) expression -> . expression LE term
    (25) expression -> . expression GE term
    (26) expression -> . expression EQ term
    (27) expression -> . expression NE term
    (28) expression -> . expression PLUS term
    (29) expression -> . expression MINUS term
    (30) expression -> . term
    (31) term -> . term MULTIPLY factor
    (32) term -> . term DIVIDE factor
    (33) term -> . factor
    (34) factor -> . NUMBER
    (35) factor -> . IDENTIFIER
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . STRING

    NUMBER          shift and go to state 27
    IDENTIFIER      shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30

    expression                     shift and go to state 50
    term                           shift and go to state 25
    factor                         shift and go to state 26

state 30

    (37) factor -> STRING .

    MULTIPLY        reduce using rule 37 (factor -> STRING .)
    DIVIDE          reduce using rule 37 (factor -> STRING .)
    SEMICOLON       reduce using rule 37 (factor -> STRING .)
    LT              reduce using rule 37 (factor -> STRING .)
    GT              reduce using rule 37 (factor -> STRING .)
    LE              reduce using rule 37 (factor -> STRING .)
    GE              reduce using rule 37 (factor -> STRING .)
    EQ              reduce using rule 37 (factor -> STRING .)
    NE              reduce using rule 37 (factor -> STRING .)
    PLUS            reduce using rule 37 (factor -> STRING .)
    MINUS           reduce using rule 37 (factor -> STRING .)
    RPAREN          reduce using rule 37 (factor -> STRING .)
    COMMA           reduce using rule 37 (factor -> STRING .)


state 31

    (13) statement -> IF LPAREN . expression RPAREN block
    (14) statement -> IF LPAREN . expression RPAREN block ELSE block
    (22) expression -> . expression LT term
    (23) expression -> . expression GT term
    (24) expression -> . expression LE term
    (25) expression -> . expression GE term
    (26) expression -> . expression EQ term
    (27) expression -> . expression NE term
    (28) expression -> . expression PLUS term
    (29) expression -> . expression MINUS term
    (30) expression -> . term
    (31) term -> . term MULTIPLY factor
    (32) term -> . term DIVIDE factor
    (33) term -> . factor
    (34) factor -> . NUMBER
    (35) factor -> . IDENTIFIER
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . STRING

    NUMBER          shift and go to state 27
    IDENTIFIER      shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30

    expression                     shift and go to state 51
    term                           shift and go to state 25
    factor                         shift and go to state 26

state 32

    (15) statement -> WHILE LPAREN . expression RPAREN block
    (22) expression -> . expression LT term
    (23) expression -> . expression GT term
    (24) expression -> . expression LE term
    (25) expression -> . expression GE term
    (26) expression -> . expression EQ term
    (27) expression -> . expression NE term
    (28) expression -> . expression PLUS term
    (29) expression -> . expression MINUS term
    (30) expression -> . term
    (31) term -> . term MULTIPLY factor
    (32) term -> . term DIVIDE factor
    (33) term -> . factor
    (34) factor -> . NUMBER
    (35) factor -> . IDENTIFIER
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . STRING

    NUMBER          shift and go to state 27
    IDENTIFIER      shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30

    expression                     shift and go to state 52
    term                           shift and go to state 25
    factor                         shift and go to state 26

state 33

    (16) statement -> PRINTF LPAREN . string_and_args RPAREN SEMICOLON
    (18) string_and_args -> . STRING
    (19) string_and_args -> . STRING COMMA arg_list

    STRING          shift and go to state 54

    string_and_args                shift and go to state 53

state 34

    (17) statement -> SCANF LPAREN . string_and_args RPAREN SEMICOLON
    (18) string_and_args -> . STRING
    (19) string_and_args -> . STRING COMMA arg_list

    STRING          shift and go to state 54

    string_and_args                shift and go to state 55

state 35

    (6) statement -> INT decl_list SEMICOLON .

    RBRACE          reduce using rule 6 (statement -> INT decl_list SEMICOLON .)
    INT             reduce using rule 6 (statement -> INT decl_list SEMICOLON .)
    IDENTIFIER      reduce using rule 6 (statement -> INT decl_list SEMICOLON .)
    RETURN          reduce using rule 6 (statement -> INT decl_list SEMICOLON .)
    IF              reduce using rule 6 (statement -> INT decl_list SEMICOLON .)
    WHILE           reduce using rule 6 (statement -> INT decl_list SEMICOLON .)
    PRINTF          reduce using rule 6 (statement -> INT decl_list SEMICOLON .)
    SCANF           reduce using rule 6 (statement -> INT decl_list SEMICOLON .)


state 36

    (7) decl_list -> decl_list COMMA . decl
    (9) decl -> . IDENTIFIER
    (10) decl -> . IDENTIFIER EQUALS expression

    IDENTIFIER      shift and go to state 22

    decl                           shift and go to state 56

state 37

    (10) decl -> IDENTIFIER EQUALS . expression
    (22) expression -> . expression LT term
    (23) expression -> . expression GT term
    (24) expression -> . expression LE term
    (25) expression -> . expression GE term
    (26) expression -> . expression EQ term
    (27) expression -> . expression NE term
    (28) expression -> . expression PLUS term
    (29) expression -> . expression MINUS term
    (30) expression -> . term
    (31) term -> . term MULTIPLY factor
    (32) term -> . term DIVIDE factor
    (33) term -> . factor
    (34) factor -> . NUMBER
    (35) factor -> . IDENTIFIER
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . STRING

    NUMBER          shift and go to state 27
    IDENTIFIER      shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30

    expression                     shift and go to state 57
    term                           shift and go to state 25
    factor                         shift and go to state 26

state 38

    (11) statement -> IDENTIFIER EQUALS expression . SEMICOLON
    (22) expression -> expression . LT term
    (23) expression -> expression . GT term
    (24) expression -> expression . LE term
    (25) expression -> expression . GE term
    (26) expression -> expression . EQ term
    (27) expression -> expression . NE term
    (28) expression -> expression . PLUS term
    (29) expression -> expression . MINUS term

    SEMICOLON       shift and go to state 58
    LT              shift and go to state 40
    GT              shift and go to state 41
    LE              shift and go to state 42
    GE              shift and go to state 43
    EQ              shift and go to state 44
    NE              shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47


state 39

    (12) statement -> RETURN expression SEMICOLON .

    RBRACE          reduce using rule 12 (statement -> RETURN expression SEMICOLON .)
    INT             reduce using rule 12 (statement -> RETURN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 12 (statement -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 12 (statement -> RETURN expression SEMICOLON .)
    IF              reduce using rule 12 (statement -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 12 (statement -> RETURN expression SEMICOLON .)
    PRINTF          reduce using rule 12 (statement -> RETURN expression SEMICOLON .)
    SCANF           reduce using rule 12 (statement -> RETURN expression SEMICOLON .)


state 40

    (22) expression -> expression LT . term
    (31) term -> . term MULTIPLY factor
    (32) term -> . term DIVIDE factor
    (33) term -> . factor
    (34) factor -> . NUMBER
    (35) factor -> . IDENTIFIER
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . STRING

    NUMBER          shift and go to state 27
    IDENTIFIER      shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30

    term                           shift and go to state 59
    factor                         shift and go to state 26

state 41

    (23) expression -> expression GT . term
    (31) term -> . term MULTIPLY factor
    (32) term -> . term DIVIDE factor
    (33) term -> . factor
    (34) factor -> . NUMBER
    (35) factor -> . IDENTIFIER
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . STRING

    NUMBER          shift and go to state 27
    IDENTIFIER      shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30

    term                           shift and go to state 60
    factor                         shift and go to state 26

state 42

    (24) expression -> expression LE . term
    (31) term -> . term MULTIPLY factor
    (32) term -> . term DIVIDE factor
    (33) term -> . factor
    (34) factor -> . NUMBER
    (35) factor -> . IDENTIFIER
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . STRING

    NUMBER          shift and go to state 27
    IDENTIFIER      shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30

    term                           shift and go to state 61
    factor                         shift and go to state 26

state 43

    (25) expression -> expression GE . term
    (31) term -> . term MULTIPLY factor
    (32) term -> . term DIVIDE factor
    (33) term -> . factor
    (34) factor -> . NUMBER
    (35) factor -> . IDENTIFIER
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . STRING

    NUMBER          shift and go to state 27
    IDENTIFIER      shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30

    term                           shift and go to state 62
    factor                         shift and go to state 26

state 44

    (26) expression -> expression EQ . term
    (31) term -> . term MULTIPLY factor
    (32) term -> . term DIVIDE factor
    (33) term -> . factor
    (34) factor -> . NUMBER
    (35) factor -> . IDENTIFIER
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . STRING

    NUMBER          shift and go to state 27
    IDENTIFIER      shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30

    term                           shift and go to state 63
    factor                         shift and go to state 26

state 45

    (27) expression -> expression NE . term
    (31) term -> . term MULTIPLY factor
    (32) term -> . term DIVIDE factor
    (33) term -> . factor
    (34) factor -> . NUMBER
    (35) factor -> . IDENTIFIER
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . STRING

    NUMBER          shift and go to state 27
    IDENTIFIER      shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30

    term                           shift and go to state 64
    factor                         shift and go to state 26

state 46

    (28) expression -> expression PLUS . term
    (31) term -> . term MULTIPLY factor
    (32) term -> . term DIVIDE factor
    (33) term -> . factor
    (34) factor -> . NUMBER
    (35) factor -> . IDENTIFIER
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . STRING

    NUMBER          shift and go to state 27
    IDENTIFIER      shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30

    term                           shift and go to state 65
    factor                         shift and go to state 26

state 47

    (29) expression -> expression MINUS . term
    (31) term -> . term MULTIPLY factor
    (32) term -> . term DIVIDE factor
    (33) term -> . factor
    (34) factor -> . NUMBER
    (35) factor -> . IDENTIFIER
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . STRING

    NUMBER          shift and go to state 27
    IDENTIFIER      shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30

    term                           shift and go to state 66
    factor                         shift and go to state 26

state 48

    (31) term -> term MULTIPLY . factor
    (34) factor -> . NUMBER
    (35) factor -> . IDENTIFIER
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . STRING

    NUMBER          shift and go to state 27
    IDENTIFIER      shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30

    factor                         shift and go to state 67

state 49

    (32) term -> term DIVIDE . factor
    (34) factor -> . NUMBER
    (35) factor -> . IDENTIFIER
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . STRING

    NUMBER          shift and go to state 27
    IDENTIFIER      shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30

    factor                         shift and go to state 68

state 50

    (36) factor -> LPAREN expression . RPAREN
    (22) expression -> expression . LT term
    (23) expression -> expression . GT term
    (24) expression -> expression . LE term
    (25) expression -> expression . GE term
    (26) expression -> expression . EQ term
    (27) expression -> expression . NE term
    (28) expression -> expression . PLUS term
    (29) expression -> expression . MINUS term

    RPAREN          shift and go to state 69
    LT              shift and go to state 40
    GT              shift and go to state 41
    LE              shift and go to state 42
    GE              shift and go to state 43
    EQ              shift and go to state 44
    NE              shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47


state 51

    (13) statement -> IF LPAREN expression . RPAREN block
    (14) statement -> IF LPAREN expression . RPAREN block ELSE block
    (22) expression -> expression . LT term
    (23) expression -> expression . GT term
    (24) expression -> expression . LE term
    (25) expression -> expression . GE term
    (26) expression -> expression . EQ term
    (27) expression -> expression . NE term
    (28) expression -> expression . PLUS term
    (29) expression -> expression . MINUS term

    RPAREN          shift and go to state 70
    LT              shift and go to state 40
    GT              shift and go to state 41
    LE              shift and go to state 42
    GE              shift and go to state 43
    EQ              shift and go to state 44
    NE              shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47


state 52

    (15) statement -> WHILE LPAREN expression . RPAREN block
    (22) expression -> expression . LT term
    (23) expression -> expression . GT term
    (24) expression -> expression . LE term
    (25) expression -> expression . GE term
    (26) expression -> expression . EQ term
    (27) expression -> expression . NE term
    (28) expression -> expression . PLUS term
    (29) expression -> expression . MINUS term

    RPAREN          shift and go to state 71
    LT              shift and go to state 40
    GT              shift and go to state 41
    LE              shift and go to state 42
    GE              shift and go to state 43
    EQ              shift and go to state 44
    NE              shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47


state 53

    (16) statement -> PRINTF LPAREN string_and_args . RPAREN SEMICOLON

    RPAREN          shift and go to state 72


state 54

    (18) string_and_args -> STRING .
    (19) string_and_args -> STRING . COMMA arg_list

    RPAREN          reduce using rule 18 (string_and_args -> STRING .)
    COMMA           shift and go to state 73


state 55

    (17) statement -> SCANF LPAREN string_and_args . RPAREN SEMICOLON

    RPAREN          shift and go to state 74


state 56

    (7) decl_list -> decl_list COMMA decl .

    SEMICOLON       reduce using rule 7 (decl_list -> decl_list COMMA decl .)
    COMMA           reduce using rule 7 (decl_list -> decl_list COMMA decl .)


state 57

    (10) decl -> IDENTIFIER EQUALS expression .
    (22) expression -> expression . LT term
    (23) expression -> expression . GT term
    (24) expression -> expression . LE term
    (25) expression -> expression . GE term
    (26) expression -> expression . EQ term
    (27) expression -> expression . NE term
    (28) expression -> expression . PLUS term
    (29) expression -> expression . MINUS term

    SEMICOLON       reduce using rule 10 (decl -> IDENTIFIER EQUALS expression .)
    COMMA           reduce using rule 10 (decl -> IDENTIFIER EQUALS expression .)
    LT              shift and go to state 40
    GT              shift and go to state 41
    LE              shift and go to state 42
    GE              shift and go to state 43
    EQ              shift and go to state 44
    NE              shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47


state 58

    (11) statement -> IDENTIFIER EQUALS expression SEMICOLON .

    RBRACE          reduce using rule 11 (statement -> IDENTIFIER EQUALS expression SEMICOLON .)
    INT             reduce using rule 11 (statement -> IDENTIFIER EQUALS expression SEMICOLON .)
    IDENTIFIER      reduce using rule 11 (statement -> IDENTIFIER EQUALS expression SEMICOLON .)
    RETURN          reduce using rule 11 (statement -> IDENTIFIER EQUALS expression SEMICOLON .)
    IF              reduce using rule 11 (statement -> IDENTIFIER EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 11 (statement -> IDENTIFIER EQUALS expression SEMICOLON .)
    PRINTF          reduce using rule 11 (statement -> IDENTIFIER EQUALS expression SEMICOLON .)
    SCANF           reduce using rule 11 (statement -> IDENTIFIER EQUALS expression SEMICOLON .)


state 59

    (22) expression -> expression LT term .
    (31) term -> term . MULTIPLY factor
    (32) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 22 (expression -> expression LT term .)
    LT              reduce using rule 22 (expression -> expression LT term .)
    GT              reduce using rule 22 (expression -> expression LT term .)
    LE              reduce using rule 22 (expression -> expression LT term .)
    GE              reduce using rule 22 (expression -> expression LT term .)
    EQ              reduce using rule 22 (expression -> expression LT term .)
    NE              reduce using rule 22 (expression -> expression LT term .)
    PLUS            reduce using rule 22 (expression -> expression LT term .)
    MINUS           reduce using rule 22 (expression -> expression LT term .)
    RPAREN          reduce using rule 22 (expression -> expression LT term .)
    COMMA           reduce using rule 22 (expression -> expression LT term .)
    MULTIPLY        shift and go to state 48
    DIVIDE          shift and go to state 49


state 60

    (23) expression -> expression GT term .
    (31) term -> term . MULTIPLY factor
    (32) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 23 (expression -> expression GT term .)
    LT              reduce using rule 23 (expression -> expression GT term .)
    GT              reduce using rule 23 (expression -> expression GT term .)
    LE              reduce using rule 23 (expression -> expression GT term .)
    GE              reduce using rule 23 (expression -> expression GT term .)
    EQ              reduce using rule 23 (expression -> expression GT term .)
    NE              reduce using rule 23 (expression -> expression GT term .)
    PLUS            reduce using rule 23 (expression -> expression GT term .)
    MINUS           reduce using rule 23 (expression -> expression GT term .)
    RPAREN          reduce using rule 23 (expression -> expression GT term .)
    COMMA           reduce using rule 23 (expression -> expression GT term .)
    MULTIPLY        shift and go to state 48
    DIVIDE          shift and go to state 49


state 61

    (24) expression -> expression LE term .
    (31) term -> term . MULTIPLY factor
    (32) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 24 (expression -> expression LE term .)
    LT              reduce using rule 24 (expression -> expression LE term .)
    GT              reduce using rule 24 (expression -> expression LE term .)
    LE              reduce using rule 24 (expression -> expression LE term .)
    GE              reduce using rule 24 (expression -> expression LE term .)
    EQ              reduce using rule 24 (expression -> expression LE term .)
    NE              reduce using rule 24 (expression -> expression LE term .)
    PLUS            reduce using rule 24 (expression -> expression LE term .)
    MINUS           reduce using rule 24 (expression -> expression LE term .)
    RPAREN          reduce using rule 24 (expression -> expression LE term .)
    COMMA           reduce using rule 24 (expression -> expression LE term .)
    MULTIPLY        shift and go to state 48
    DIVIDE          shift and go to state 49


state 62

    (25) expression -> expression GE term .
    (31) term -> term . MULTIPLY factor
    (32) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 25 (expression -> expression GE term .)
    LT              reduce using rule 25 (expression -> expression GE term .)
    GT              reduce using rule 25 (expression -> expression GE term .)
    LE              reduce using rule 25 (expression -> expression GE term .)
    GE              reduce using rule 25 (expression -> expression GE term .)
    EQ              reduce using rule 25 (expression -> expression GE term .)
    NE              reduce using rule 25 (expression -> expression GE term .)
    PLUS            reduce using rule 25 (expression -> expression GE term .)
    MINUS           reduce using rule 25 (expression -> expression GE term .)
    RPAREN          reduce using rule 25 (expression -> expression GE term .)
    COMMA           reduce using rule 25 (expression -> expression GE term .)
    MULTIPLY        shift and go to state 48
    DIVIDE          shift and go to state 49


state 63

    (26) expression -> expression EQ term .
    (31) term -> term . MULTIPLY factor
    (32) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 26 (expression -> expression EQ term .)
    LT              reduce using rule 26 (expression -> expression EQ term .)
    GT              reduce using rule 26 (expression -> expression EQ term .)
    LE              reduce using rule 26 (expression -> expression EQ term .)
    GE              reduce using rule 26 (expression -> expression EQ term .)
    EQ              reduce using rule 26 (expression -> expression EQ term .)
    NE              reduce using rule 26 (expression -> expression EQ term .)
    PLUS            reduce using rule 26 (expression -> expression EQ term .)
    MINUS           reduce using rule 26 (expression -> expression EQ term .)
    RPAREN          reduce using rule 26 (expression -> expression EQ term .)
    COMMA           reduce using rule 26 (expression -> expression EQ term .)
    MULTIPLY        shift and go to state 48
    DIVIDE          shift and go to state 49


state 64

    (27) expression -> expression NE term .
    (31) term -> term . MULTIPLY factor
    (32) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 27 (expression -> expression NE term .)
    LT              reduce using rule 27 (expression -> expression NE term .)
    GT              reduce using rule 27 (expression -> expression NE term .)
    LE              reduce using rule 27 (expression -> expression NE term .)
    GE              reduce using rule 27 (expression -> expression NE term .)
    EQ              reduce using rule 27 (expression -> expression NE term .)
    NE              reduce using rule 27 (expression -> expression NE term .)
    PLUS            reduce using rule 27 (expression -> expression NE term .)
    MINUS           reduce using rule 27 (expression -> expression NE term .)
    RPAREN          reduce using rule 27 (expression -> expression NE term .)
    COMMA           reduce using rule 27 (expression -> expression NE term .)
    MULTIPLY        shift and go to state 48
    DIVIDE          shift and go to state 49


state 65

    (28) expression -> expression PLUS term .
    (31) term -> term . MULTIPLY factor
    (32) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 28 (expression -> expression PLUS term .)
    LT              reduce using rule 28 (expression -> expression PLUS term .)
    GT              reduce using rule 28 (expression -> expression PLUS term .)
    LE              reduce using rule 28 (expression -> expression PLUS term .)
    GE              reduce using rule 28 (expression -> expression PLUS term .)
    EQ              reduce using rule 28 (expression -> expression PLUS term .)
    NE              reduce using rule 28 (expression -> expression PLUS term .)
    PLUS            reduce using rule 28 (expression -> expression PLUS term .)
    MINUS           reduce using rule 28 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 28 (expression -> expression PLUS term .)
    COMMA           reduce using rule 28 (expression -> expression PLUS term .)
    MULTIPLY        shift and go to state 48
    DIVIDE          shift and go to state 49


state 66

    (29) expression -> expression MINUS term .
    (31) term -> term . MULTIPLY factor
    (32) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 29 (expression -> expression MINUS term .)
    LT              reduce using rule 29 (expression -> expression MINUS term .)
    GT              reduce using rule 29 (expression -> expression MINUS term .)
    LE              reduce using rule 29 (expression -> expression MINUS term .)
    GE              reduce using rule 29 (expression -> expression MINUS term .)
    EQ              reduce using rule 29 (expression -> expression MINUS term .)
    NE              reduce using rule 29 (expression -> expression MINUS term .)
    PLUS            reduce using rule 29 (expression -> expression MINUS term .)
    MINUS           reduce using rule 29 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 29 (expression -> expression MINUS term .)
    COMMA           reduce using rule 29 (expression -> expression MINUS term .)
    MULTIPLY        shift and go to state 48
    DIVIDE          shift and go to state 49


state 67

    (31) term -> term MULTIPLY factor .

    MULTIPLY        reduce using rule 31 (term -> term MULTIPLY factor .)
    DIVIDE          reduce using rule 31 (term -> term MULTIPLY factor .)
    SEMICOLON       reduce using rule 31 (term -> term MULTIPLY factor .)
    LT              reduce using rule 31 (term -> term MULTIPLY factor .)
    GT              reduce using rule 31 (term -> term MULTIPLY factor .)
    LE              reduce using rule 31 (term -> term MULTIPLY factor .)
    GE              reduce using rule 31 (term -> term MULTIPLY factor .)
    EQ              reduce using rule 31 (term -> term MULTIPLY factor .)
    NE              reduce using rule 31 (term -> term MULTIPLY factor .)
    PLUS            reduce using rule 31 (term -> term MULTIPLY factor .)
    MINUS           reduce using rule 31 (term -> term MULTIPLY factor .)
    RPAREN          reduce using rule 31 (term -> term MULTIPLY factor .)
    COMMA           reduce using rule 31 (term -> term MULTIPLY factor .)


state 68

    (32) term -> term DIVIDE factor .

    MULTIPLY        reduce using rule 32 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 32 (term -> term DIVIDE factor .)
    SEMICOLON       reduce using rule 32 (term -> term DIVIDE factor .)
    LT              reduce using rule 32 (term -> term DIVIDE factor .)
    GT              reduce using rule 32 (term -> term DIVIDE factor .)
    LE              reduce using rule 32 (term -> term DIVIDE factor .)
    GE              reduce using rule 32 (term -> term DIVIDE factor .)
    EQ              reduce using rule 32 (term -> term DIVIDE factor .)
    NE              reduce using rule 32 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 32 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 32 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 32 (term -> term DIVIDE factor .)
    COMMA           reduce using rule 32 (term -> term DIVIDE factor .)


state 69

    (36) factor -> LPAREN expression RPAREN .

    MULTIPLY        reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    LT              reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    GT              reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    LE              reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    GE              reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    EQ              reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    NE              reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 36 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 36 (factor -> LPAREN expression RPAREN .)


state 70

    (13) statement -> IF LPAREN expression RPAREN . block
    (14) statement -> IF LPAREN expression RPAREN . block ELSE block
    (3) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 8

    block                          shift and go to state 75

state 71

    (15) statement -> WHILE LPAREN expression RPAREN . block
    (3) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 8

    block                          shift and go to state 76

state 72

    (16) statement -> PRINTF LPAREN string_and_args RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 77


state 73

    (19) string_and_args -> STRING COMMA . arg_list
    (20) arg_list -> . arg_list COMMA expression
    (21) arg_list -> . expression
    (22) expression -> . expression LT term
    (23) expression -> . expression GT term
    (24) expression -> . expression LE term
    (25) expression -> . expression GE term
    (26) expression -> . expression EQ term
    (27) expression -> . expression NE term
    (28) expression -> . expression PLUS term
    (29) expression -> . expression MINUS term
    (30) expression -> . term
    (31) term -> . term MULTIPLY factor
    (32) term -> . term DIVIDE factor
    (33) term -> . factor
    (34) factor -> . NUMBER
    (35) factor -> . IDENTIFIER
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . STRING

    NUMBER          shift and go to state 27
    IDENTIFIER      shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30

    arg_list                       shift and go to state 78
    expression                     shift and go to state 79
    term                           shift and go to state 25
    factor                         shift and go to state 26

state 74

    (17) statement -> SCANF LPAREN string_and_args RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 80


state 75

    (13) statement -> IF LPAREN expression RPAREN block .
    (14) statement -> IF LPAREN expression RPAREN block . ELSE block

    RBRACE          reduce using rule 13 (statement -> IF LPAREN expression RPAREN block .)
    INT             reduce using rule 13 (statement -> IF LPAREN expression RPAREN block .)
    IDENTIFIER      reduce using rule 13 (statement -> IF LPAREN expression RPAREN block .)
    RETURN          reduce using rule 13 (statement -> IF LPAREN expression RPAREN block .)
    IF              reduce using rule 13 (statement -> IF LPAREN expression RPAREN block .)
    WHILE           reduce using rule 13 (statement -> IF LPAREN expression RPAREN block .)
    PRINTF          reduce using rule 13 (statement -> IF LPAREN expression RPAREN block .)
    SCANF           reduce using rule 13 (statement -> IF LPAREN expression RPAREN block .)
    ELSE            shift and go to state 81


state 76

    (15) statement -> WHILE LPAREN expression RPAREN block .

    RBRACE          reduce using rule 15 (statement -> WHILE LPAREN expression RPAREN block .)
    INT             reduce using rule 15 (statement -> WHILE LPAREN expression RPAREN block .)
    IDENTIFIER      reduce using rule 15 (statement -> WHILE LPAREN expression RPAREN block .)
    RETURN          reduce using rule 15 (statement -> WHILE LPAREN expression RPAREN block .)
    IF              reduce using rule 15 (statement -> WHILE LPAREN expression RPAREN block .)
    WHILE           reduce using rule 15 (statement -> WHILE LPAREN expression RPAREN block .)
    PRINTF          reduce using rule 15 (statement -> WHILE LPAREN expression RPAREN block .)
    SCANF           reduce using rule 15 (statement -> WHILE LPAREN expression RPAREN block .)


state 77

    (16) statement -> PRINTF LPAREN string_and_args RPAREN SEMICOLON .

    RBRACE          reduce using rule 16 (statement -> PRINTF LPAREN string_and_args RPAREN SEMICOLON .)
    INT             reduce using rule 16 (statement -> PRINTF LPAREN string_and_args RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 16 (statement -> PRINTF LPAREN string_and_args RPAREN SEMICOLON .)
    RETURN          reduce using rule 16 (statement -> PRINTF LPAREN string_and_args RPAREN SEMICOLON .)
    IF              reduce using rule 16 (statement -> PRINTF LPAREN string_and_args RPAREN SEMICOLON .)
    WHILE           reduce using rule 16 (statement -> PRINTF LPAREN string_and_args RPAREN SEMICOLON .)
    PRINTF          reduce using rule 16 (statement -> PRINTF LPAREN string_and_args RPAREN SEMICOLON .)
    SCANF           reduce using rule 16 (statement -> PRINTF LPAREN string_and_args RPAREN SEMICOLON .)


state 78

    (19) string_and_args -> STRING COMMA arg_list .
    (20) arg_list -> arg_list . COMMA expression

    RPAREN          reduce using rule 19 (string_and_args -> STRING COMMA arg_list .)
    COMMA           shift and go to state 82


state 79

    (21) arg_list -> expression .
    (22) expression -> expression . LT term
    (23) expression -> expression . GT term
    (24) expression -> expression . LE term
    (25) expression -> expression . GE term
    (26) expression -> expression . EQ term
    (27) expression -> expression . NE term
    (28) expression -> expression . PLUS term
    (29) expression -> expression . MINUS term

    COMMA           reduce using rule 21 (arg_list -> expression .)
    RPAREN          reduce using rule 21 (arg_list -> expression .)
    LT              shift and go to state 40
    GT              shift and go to state 41
    LE              shift and go to state 42
    GE              shift and go to state 43
    EQ              shift and go to state 44
    NE              shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47


state 80

    (17) statement -> SCANF LPAREN string_and_args RPAREN SEMICOLON .

    RBRACE          reduce using rule 17 (statement -> SCANF LPAREN string_and_args RPAREN SEMICOLON .)
    INT             reduce using rule 17 (statement -> SCANF LPAREN string_and_args RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 17 (statement -> SCANF LPAREN string_and_args RPAREN SEMICOLON .)
    RETURN          reduce using rule 17 (statement -> SCANF LPAREN string_and_args RPAREN SEMICOLON .)
    IF              reduce using rule 17 (statement -> SCANF LPAREN string_and_args RPAREN SEMICOLON .)
    WHILE           reduce using rule 17 (statement -> SCANF LPAREN string_and_args RPAREN SEMICOLON .)
    PRINTF          reduce using rule 17 (statement -> SCANF LPAREN string_and_args RPAREN SEMICOLON .)
    SCANF           reduce using rule 17 (statement -> SCANF LPAREN string_and_args RPAREN SEMICOLON .)


state 81

    (14) statement -> IF LPAREN expression RPAREN block ELSE . block
    (3) block -> . LBRACE statements RBRACE

    LBRACE          shift and go to state 8

    block                          shift and go to state 83

state 82

    (20) arg_list -> arg_list COMMA . expression
    (22) expression -> . expression LT term
    (23) expression -> . expression GT term
    (24) expression -> . expression LE term
    (25) expression -> . expression GE term
    (26) expression -> . expression EQ term
    (27) expression -> . expression NE term
    (28) expression -> . expression PLUS term
    (29) expression -> . expression MINUS term
    (30) expression -> . term
    (31) term -> . term MULTIPLY factor
    (32) term -> . term DIVIDE factor
    (33) term -> . factor
    (34) factor -> . NUMBER
    (35) factor -> . IDENTIFIER
    (36) factor -> . LPAREN expression RPAREN
    (37) factor -> . STRING

    NUMBER          shift and go to state 27
    IDENTIFIER      shift and go to state 28
    LPAREN          shift and go to state 29
    STRING          shift and go to state 30

    expression                     shift and go to state 84
    term                           shift and go to state 25
    factor                         shift and go to state 26

state 83

    (14) statement -> IF LPAREN expression RPAREN block ELSE block .

    RBRACE          reduce using rule 14 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    INT             reduce using rule 14 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    IDENTIFIER      reduce using rule 14 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    RETURN          reduce using rule 14 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    IF              reduce using rule 14 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    WHILE           reduce using rule 14 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    PRINTF          reduce using rule 14 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    SCANF           reduce using rule 14 (statement -> IF LPAREN expression RPAREN block ELSE block .)


state 84

    (20) arg_list -> arg_list COMMA expression .
    (22) expression -> expression . LT term
    (23) expression -> expression . GT term
    (24) expression -> expression . LE term
    (25) expression -> expression . GE term
    (26) expression -> expression . EQ term
    (27) expression -> expression . NE term
    (28) expression -> expression . PLUS term
    (29) expression -> expression . MINUS term

    COMMA           reduce using rule 20 (arg_list -> arg_list COMMA expression .)
    RPAREN          reduce using rule 20 (arg_list -> arg_list COMMA expression .)
    LT              shift and go to state 40
    GT              shift and go to state 41
    LE              shift and go to state 42
    GE              shift and go to state 43
    EQ              shift and go to state 44
    NE              shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47

